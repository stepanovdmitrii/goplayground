Общая подготовка
Базис
Какой опыт работы с redmine, gitlab?
Как избавиться от монолитности приложения?
Модульность VS Микросервисы?
Микросервисы VS Монолит
Основы командной работы
code review
git flow, PR, etc
Языки программирования
С какими работали?
ООП
“Классическое” ООП
Темплейтное ООП
Структуры данных
hash
Массив
Разреженный массив
Сериализация-десериализация
Деревья (b-tree, rb-tree)
Алгоритмы
Обращение односвязного списка
Сложности алгоритмов
Пузырек
Quick sort
Криптография
Симметричная и асимметричная
AES128 и AES256
В чем разница
Распухают ли данные
Коммуникация
IP, TCP, ICMP, UDP
DNS
HTTP
HTTP1.1 vs HTTP2.0
SSL
Websocket
REST и RPC
Их отличия
JSON, msgpack, protobuf
Типизация сообщений

Среда выполнения (OS)
Процессы и нити, green threads
nginx vs apache
вытесняющая/невытесняющая многозадачность
Concurrency vs multitasking
Сокет, pipe, FIFO, shmem
Graceful restart
СУБД
Реляционные
Что такое транзакция
Уровни изоляции 
Индексы
Key-Value
Pub-Sub
В чем отличие
NoSQL
Мониторинг
Метрики
Системы сбора метрик
Зачем это вообще нужно

Golang
Многозадачность
Какого типа?
ООП
Какого типа?
Что такое интерфейс
Структуры данных
Hash
Порядок элементов
Массив
Append
Канал
Назначение
Буферизация
Закрытие
Что будет, если писать в закрытый канал?
Что будет, если читать из закрытого канала?
Как закрывать канал со стороны читателя?
Зачем может потребоваться схема “много писателей - один читатель”?
Алгоритмы
Concurrency
Mutex и RWMutex
В чем разница?
Что будет, если попытаться взять RLock и следом WLock?
Сериализация/десериализация
Коммуникация
Проблемы
Senior skills



Какие технологические преймущества экосистемы Go вы можете назвать?	
	Что такое thread pool, какого он размера и зачем он нужен?
	Каковы функции шедулера?
	Что происходит, когда вы отправляете данные из горутины в сетевое соединение?
Какие технологические недостатки языка Go вы можте назвать?	
	Что вас огорчает в системе типов Go?
	Почему на Go практически не пишут расширений для других языков и динамических библиотек?
Какие средства обобщенного программирования есть в Go?	
Go - императивный или декларативный? А в чем разница?	
	Как соблюдать SOLID при программировании на Go?
Почему встраивание - не наследование?	
	Что значит "A little copying is better than a little dependency"?
	Что такое тип-сумма и как ее реализовать на Go?
Что такое type switch?	
Как сообщить компилятору, что наш тип реализует интерфейс?	
Где следует поместить описание интерфейса и почему?	
	Как вы применяете пакеты internal?
	Ваш любимый способ делать dependency injection?
Как работает append?	
какое у slice zero value? какие операции над ним возможны?	
можно ли использовать один и тот же буфер []byte в нескольких горутинах?	
	как сделать из слайса массив?
как устроен тип map?	
	какая функция используется для хеширования в map?
	Что может быть ключем в map?
Каков порядок перебора map?	
Что будет, если читать из закрытого канала?	
Что будет, если писать в закрытый канал?	
	Почему иногда говорят, что в Go nil имеет тип?
	Как получить переменную, которая не-nil, но nil?
Что такое lock-free структуры данных, и есть ли в go такие?	
	Как вы реализуете LRU cache на go?
Как вы отсортируете массив структур по алфавиту по полю Name?	
	Удалить дубликаты из массива без переаллокации - можно ли?
Сколько времени в минутах займет у вас написание процедуры обращения односвязного списка?	
	что лучше - список или массив?
	как вы реализуете разреженный массив на go?
Предположим, ваша функция должна возвращать детализированные Recoverable и Fatal ошибки. как это реализовано в пакете net? как это надо делать в современном Go?	
Какие типы мьютексов предоставляет stdlib?	
	Что именно защищает мьютекс?
сколько R и W локов можно взять от sync.RWMutex одновременно?	
Что будет, если попытаться взять Lock, не отпустив RUnlock?	
	Зачем нужны atomic?
	Почему интенсивная конкурентная модификация atomic приводит к заметному снижению производительности?
Главный недостаток стандартного логгера?	
Что такое сериализация? зачем она нужна?	
	у вас есть кривой json с плавающим типом полей. как написать десериализатор?
	в чем польза от sync.Pool?
какой у вас любимый линтер?	
	какой у вас любимый логгер? чем хорош zerolog?
	если сериализация медленная - что делать?
есть ли для go хороший orm? ответ обоснуйте	
	Ваши критерии выбора между GRPC и OpenAPI?
	Главная проблема производительности современной компьютерной системы?
Способы поиска проблем производительности на проде?	
	Достоинства и недостатки метрик?
	Типы метрик prometheus?
Стандартный набор метрик prometheus в go-программе?	
Как встроить стандартный профайлер в свое приложение?	
Overhead от стандартного профайлера?	